# 工作流名称
name: Assemble Android Debug

# 触发工作流程的事件
on:
  push:
    tags: [ v*, r*, a* ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

# 工作流环境变量
env:
  # 应用的application_id
  APP_ID: ${{secrets.APP_ID}}
  # 应用名称
  APP_NAME: Taro
  # 打包类型
  BUILD_TYPE: debug
  # 版本名称
  ANDROID_VERSION_NAME: 1.4.10
  # 版本号
  ANDROID_VERSION_CODE: 141000
  # 密钥库文件
  ANDROID_KEYSTORE_FILE: debug.keystore
  # 密钥库口令
  ANDROID_KEYSTORE_PASSWORD: ${{secrets.DEBUG_KEYSTORE_PASSWORD}}
  # 密钥库别名
  ANDROID_KEYSTORE_KEY_ALIAS: android
  # 密钥库别名口令
  ANDROID_KEYSTORE_KEY_PASSWORD: ${{secrets.DEBUG_KEYSTORE_PASSWORD}}

# 工作流作业
jobs:
  assemble:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Cache node_modules Folder
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules
          restore-keys: ${{ runner.os }}-node_modules
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: |
          yarn
      - name: Build Taro React Native Bundle
        run: |
          yarn build:rn --platform android
      - name: Cache Gradle
        uses: actions/cache@v2
        env:
          cache-name: gradle-cache
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Assemble Android ${{ env.BUILD_TYPE }}
        run: |
          cd ./android && \
          ./gradlew assemble${{ env.BUILD_TYPE }} \
            -Papp_id=${{ env.APP_ID }} \
            -Papp_name='${{ env.APP_NAME }}' \
            -Papp_icon=${{env.APP_ICON}} \
            -Papp_round_icon=${{env.APP_ROUND_ICON}} \
            -Pversion_code=${{ env.ANDROID_VERSION_CODE }} \
            -Pversion_name=${{ env.ANDROID_VERSION_NAME }} \
            -Pkeystore_file='${{ env.ANDROID_KEYSTORE_FILE }}' \
            -Pkeystore_password='${{ env.ANDROID_KEYSTORE_PASSWORD }}' \
            -Pkeystore_key_alias='${{ env.ANDROID_KEYSTORE_KEY_ALIAS }}' \
            -Pkeystore_key_password='${{ env.ANDROID_KEYSTORE_KEY_PASSWORD }}'
      - name: Upload Android Products
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ env.BUILD_TYPE }}
          path: ${{ github.workspace }}/android/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-${{ env.BUILD_TYPE }}.apk
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: ${{ contains(github.ref, 'beta') }}
          files: |
            android/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-${{ env.BUILD_TYPE }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
